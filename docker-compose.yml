
services:
  as-server:
    build: .
    ports:
      - "8000:8000"
    volumes:
      - ./as_server:/app/as_server
      - ./common:/app/common
      - ./config:/app/config
    command: python as_server/as_server.py
    healthcheck:
      test: ["CMD", "python", "-c", 'import socket,sys; s=socket.socket(); s.settimeout(1); try: s.connect(("127.0.0.1",8000)); s.close(); except: import sys; sys.exit(1)']
      interval: 10s
      timeout: 2s
      retries: 5
    networks:
      - kerberos-net

  tgs-server:
    build: .
    ports:
      - "8001:8001"
    volumes:
      - ./tgs_server:/app/tgs_server
      - ./common:/app/common
      - ./config:/app/config
    command: python tgs_server/tgs_server.py
    healthcheck:
      test: ["CMD", "python", "-c", 'import socket,sys; s=socket.socket(); s.settimeout(1); try: s.connect(("127.0.0.1",8001)); s.close(); except: import sys; sys.exit(1)']
      interval: 10s
      timeout: 2s
      retries: 5
    networks:
      - kerberos-net

  service-server:
    build: .
    ports:
      - "8002:8002"
    volumes:
      - ./service_server:/app/service_server
      - ./common:/app/common
      - ./config:/app/config
    command: python service_server/service_server.py
    healthcheck:
      test: ["CMD", "python", "-c", 'import socket,sys; s=socket.socket(); s.settimeout(1); try: s.connect(("127.0.0.1",8002)); s.close(); except: import sys; sys.exit(1)']
      interval: 10s
      timeout: 2s
      retries: 5
    networks:
      - kerberos-net

  client:
    build: .
    volumes:
      - ./client:/app/client
      - ./common:/app/common
      - ./config:/app/config
    command: python client/client.py
    networks:
      - kerberos-net
    depends_on:
      - as-server
      - tgs-server
      - service-server

networks:
  kerberos-net:
    driver: bridge